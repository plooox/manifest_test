{"ast":null,"code":"import _objectSpread from\"/var/jenkins_home/workspace/pipeline-test/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/var/jenkins_home/workspace/pipeline-test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as React from'react';import Paper from'@mui/material/Paper';import Table from'@mui/material/Table';import TableBody from'@mui/material/TableBody';import TableCell from'@mui/material/TableCell';import TableContainer from'@mui/material/TableContainer';import TableHead from'@mui/material/TableHead';import TablePagination from'@mui/material/TablePagination';import TableRow from'@mui/material/TableRow';import{useTable,useGlobalFilter,useSortBy}from'react-table';import{Box}from'@mui/material';import Search from'../assets/Search';import{jsx as _jsx}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function EnrolledTable(_ref){var columns=_ref.columns,data=_ref.data;var _useTable=useTable({columns:columns,data:data},useGlobalFilter,useSortBy),getTableProps=_useTable.getTableProps,getTableBodyProps=_useTable.getTableBodyProps,headerGroups=_useTable.headerGroups,rows=_useTable.rows,prepareRow=_useTable.prepareRow,setGlobalFilter=_useTable.setGlobalFilter;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),page=_React$useState2[0],setPage=_React$useState2[1];var _React$useState3=React.useState(10),_React$useState4=_slicedToArray(_React$useState3,2),rowsPerPage=_React$useState4[0],setRowsPerPage=_React$useState4[1];var handleChangePage=function handleChangePage(event,newPage){setPage(newPage);};var handleChangeRowsPerPage=function handleChangeRowsPerPage(event){setRowsPerPage(+event.target.value);setPage(0);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Paper,{sx:{width:'100%',overflow:'hidden'},children:[/*#__PURE__*/_jsx(TableContainer,{sx:{maxHeight:440},children:/*#__PURE__*/_jsxs(Table,_objectSpread(_objectSpread({},getTableProps()),{},{stickyHeader:true,\"aria-label\":\"sticky table\",children:[/*#__PURE__*/_jsx(TableHead,{children:headerGroups.map(function(headerGroup){return/*#__PURE__*/_jsx(TableRow,_objectSpread(_objectSpread({},headerGroup.getHeaderGroupProps()),{},{children:headerGroup.headers.map(function(column){return/*#__PURE__*/_jsx(TableCell,_objectSpread(_objectSpread({},column.getHeaderProps(column.getSortByToggleProps())),{},{children:column.render(\"Header\")}));})}));})}),/*#__PURE__*/_jsx(TableBody,_objectSpread(_objectSpread({},getTableBodyProps()),{},{children:rows// .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n.map(function(row){prepareRow(row);return/*#__PURE__*/_createElement(TableRow,_objectSpread(_objectSpread({},row.getRowProps()),{},{hover:true,role:\"checkbox\",tabIndex:-1,key:row.id}),row.cells.map(function(cell){return/*#__PURE__*/_jsx(TableCell,_objectSpread(_objectSpread({},cell.getCellProps()),{},{children:cell.render(\"Cell\")}));}));})}))]}))}),/*#__PURE__*/_jsx(TablePagination,{rowsPerPageOptions:[10,25,100],component:\"div\",count:rows.length,rowsPerPage:rowsPerPage,page:page,onPageChange:handleChangePage,onRowsPerPageChange:handleChangeRowsPerPage}),/*#__PURE__*/_jsx(Box,{sx:{m:1,display:'flex',flexwrap:'wrap'},justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(Search,{onSubmit:setGlobalFilter})})]})});}","map":{"version":3,"sources":["/var/jenkins_home/workspace/pipeline-test/src/components/views/SearchLogTable.js"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","useTable","useGlobalFilter","useSortBy","Box","Search","EnrolledTable","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","width","overflow","maxHeight","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","row","getRowProps","id","cells","cell","getCellProps","length","m","display","flexwrap"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { useTable, useGlobalFilter, useSortBy } from 'react-table'\nimport { Box } from '@mui/material';\nimport Search from '../assets/Search'\n\n\nexport default function EnrolledTable({columns, data}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setGlobalFilter,\n  } = useTable({ columns, data }, useGlobalFilter, useSortBy);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <>\n      <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n        {/* It should be implemented using calculation algorithm */}\n        {/* <TableContainer>\n            <Table sx={{ minWidth: 500 }}>\n                <TableHead>\n                <TableRow>\n                    <TableCell>학번</TableCell>\n                    <TableCell>전공</TableCell>\n                    <TableCell>실험</TableCell>\n                    <TableCell>교양</TableCell>\n                    <TableCell>취득 학점</TableCell>\n                    <TableCell>평점 평균</TableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                        <TableCell>20200202</TableCell>\n                        <TableCell>22</TableCell>\n                        <TableCell>2</TableCell>\n                        <TableCell>22</TableCell>\n                        <TableCell>46</TableCell>\n                        <TableCell>2.2</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </TableContainer> */}\n        {/* --------------------------------------------------------- */}\n\n        <TableContainer sx={{ maxHeight: 440 }}>\n            <Table {...getTableProps()} stickyHeader aria-label=\"sticky table\"> \n                <TableHead>\n                {headerGroups.map((headerGroup) => (\n                    <TableRow {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map((column) => (\n                        <TableCell {...column.getHeaderProps(column.getSortByToggleProps())}>\n                        {column.render(\"Header\")}\n                        </TableCell>\n                    ))}\n                    </TableRow>\n                ))}\n                </TableHead>\n                <TableBody {...getTableBodyProps()}>\n                {rows\n                    // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row) => {\n                    prepareRow(row);\n                    return (\n                        <TableRow {...row.getRowProps()} hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                        {row.cells.map((cell) => (\n                            <TableCell {...cell.getCellProps()}>{cell.render(\"Cell\")}</TableCell>\n                        ))}\n                        </TableRow>\n                    );\n                    \n                })}\n                \n                </TableBody>\n            </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n        <Box sx={{m: 1, display: 'flex', flexwrap: 'wrap'}} justifyContent=\"flex-end\">\n            {/* 검색 */}\n            <Search onSubmit={setGlobalFilter} /> \n        </Box>\n      </Paper>     \n    </>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}